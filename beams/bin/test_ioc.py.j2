import os
from textwrap import dedent

from caproto import ChannelType
from caproto.server import PVGroup, ioc_arg_parser, pvproperty, run


class BTSimIOC(PVGroup):
    """
    An IOC to replicate the PVs used by your behavior tree.
    """
{% for pv_info in all_pvinfo %}
    {{ pv_info.python_name }} = pvproperty(
        name="{{ pv_info.pvname }}",
        doc="Fake {{ pv_info.pvname }}",
        value={{ pv_info.value }},
        dtype=ChannelType.{{ pv_info.dtype }},
        {% if pv_info.enum_strings %}
        enum_strings={{ pv_info.enum_strings }},
        {% endif %}
    )
{% endfor %}


if __name__ == '__main__':
    # Default is 5064, switch to 5066 to avoid conflict with prod
    # Set this in terminal before you run your tree too to connect to this sim
    os.environ["EPICS_CA_SERVER_PORT"] = "5066"
    ioc_options, run_options = ioc_arg_parser(
        default_prefix='',
        desc=dedent(BTSimIOC.__doc__))
    ioc = BTSimIOC(**ioc_options)
    run(ioc.pvdb, **run_options)
